{"name": "Успешная авторизация на сайте", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=136.0.7103.114)\nStacktrace:\n\tGetHandleVerifier [0x00A3FC83+61635]\n\tGetHandleVerifier [0x00A3FCC4+61700]\n\t(No symbol) [0x0086044E]\n\t(No symbol) [0x008A9B4B]\n\t(No symbol) [0x0089E5A5]\n\t(No symbol) [0x008CD29C]\n\t(No symbol) [0x0089E034]\n\t(No symbol) [0x008CD514]\n\t(No symbol) [0x008EE61B]\n\t(No symbol) [0x008CD096]\n\t(No symbol) [0x0089C840]\n\t(No symbol) [0x0089D6A4]\n\tGetHandleVerifier [0x00CC45A3+2701795]\n\tGetHandleVerifier [0x00CBFD26+2683238]\n\tGetHandleVerifier [0x00CDAA6E+2793134]\n\tGetHandleVerifier [0x00A56945+155013]\n\tGetHandleVerifier [0x00A5D02D+181357]\n\tGetHandleVerifier [0x00A474D8+92440]\n\tGetHandleVerifier [0x00A47680+92864]\n\tGetHandleVerifier [0x00A32070+5296]\n\tBaseThreadInitThunk [0x7694FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x770982AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x7709827E+238]", "trace": "self = <test_ui.TestAuthUI object at 0x0000021DB4141F90>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"38c7975dad04edd879cebe2fb65ba191\")>\n\n    @allure.title(\"Успешная авторизация на сайте\")\n    @allure.description(\"Проверяем, что пользователь может войти с валидными учетными данными\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_successful_login(self, driver):\n        with allure.step(\"Открываем главную страницу\"):\n            driver.get(BASE_URL)\n        with allure.step(\"Открываем форму авторизации\"):\n        # Если нужно, раскомментируйте и исправьте селекторы ниже:\n        # driver.find_element(By.CSS_SELECTOR, \".user-icon\").click()\n        # driver.find_element(By.CSS_SELECTOR, \".user-menu-link.body_s\").click()\n>           driver.find_element(By.XPATH, '//span[contains(@class, \"is_text\") and text()=\"Личный кабинет\"]').click()\n\ntests\\test_ui.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021DB45E47D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x770982AE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7709827E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=136.0.7103.114)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00A3FC83+61635]\nE       \tGetHandleVerifier [0x00A3FCC4+61700]\nE       \t(No symbol) [0x0086044E]\nE       \t(No symbol) [0x008A9B4B]\nE       \t(No symbol) [0x0089E5A5]\nE       \t(No symbol) [0x008CD29C]\nE       \t(No symbol) [0x0089E034]\nE       \t(No symbol) [0x008CD514]\nE       \t(No symbol) [0x008EE61B]\nE       \t(No symbol) [0x008CD096]\nE       \t(No symbol) [0x0089C840]\nE       \t(No symbol) [0x0089D6A4]\nE       \tGetHandleVerifier [0x00CC45A3+2701795]\nE       \tGetHandleVerifier [0x00CBFD26+2683238]\nE       \tGetHandleVerifier [0x00CDAA6E+2793134]\nE       \tGetHandleVerifier [0x00A56945+155013]\nE       \tGetHandleVerifier [0x00A5D02D+181357]\nE       \tGetHandleVerifier [0x00A474D8+92440]\nE       \tGetHandleVerifier [0x00A47680+92864]\nE       \tGetHandleVerifier [0x00A32070+5296]\nE       \tBaseThreadInitThunk [0x7694FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x770982AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7709827E+238]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementNotInteractableException"}, "description": "Проверяем, что пользователь может войти с валидными учетными данными", "steps": [{"name": "Открываем главную страницу", "status": "passed", "start": 1747581317715, "stop": 1747581431409}, {"name": "Открываем форму авторизации", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=136.0.7103.114)\nStacktrace:\n\tGetHandleVerifier [0x00A3FC83+61635]\n\tGetHandleVerifier [0x00A3FCC4+61700]\n\t(No symbol) [0x0086044E]\n\t(No symbol) [0x008A9B4B]\n\t(No symbol) [0x0089E5A5]\n\t(No symbol) [0x008CD29C]\n\t(No symbol) [0x0089E034]\n\t(No symbol) [0x008CD514]\n\t(No symbol) [0x008EE61B]\n\t(No symbol) [0x008CD096]\n\t(No symbol) [0x0089C840]\n\t(No symbol) [0x0089D6A4]\n\tGetHandleVerifier [0x00CC45A3+2701795]\n\tGetHandleVerifier [0x00CBFD26+2683238]\n\tGetHandleVerifier [0x00CDAA6E+2793134]\n\tGetHandleVerifier [0x00A56945+155013]\n\tGetHandleVerifier [0x00A5D02D+181357]\n\tGetHandleVerifier [0x00A474D8+92440]\n\tGetHandleVerifier [0x00A47680+92864]\n\tGetHandleVerifier [0x00A32070+5296]\n\tBaseThreadInitThunk [0x7694FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x770982AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x7709827E+238]\n\n", "trace": "  File \"c:\\Users\\admin\\Desktop\\Фиальный проект\\final-project\\tests\\test_ui.py\", line 23, in test_successful_login\n    driver.find_element(By.XPATH, '//span[contains(@class, \"is_text\") and text()=\"Личный кабинет\"]').click()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\admin\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1747581431409, "stop": 1747581431460}], "start": 1747581317715, "stop": 1747581431462, "uuid": "8c16dc63-4d65-425e-8fbc-89225426b74f", "historyId": "7f8b03e86fd8f0b6094f0832fc1bd706", "testCaseId": "7f8b03e86fd8f0b6094f0832fc1bd706", "fullName": "tests.test_ui.TestAuthUI#test_successful_login", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Авторизация"}, {"name": "tag", "value": "ui"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestAuthUI"}, {"name": "host", "value": "DESKTOP-4F3BQLH"}, {"name": "thread", "value": "1152-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}]}